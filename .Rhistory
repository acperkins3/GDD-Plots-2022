New <- merge(Existing, New, sort=FALSE, all=TRUE) %>%
mutate(GDDDaily = calc.daily.GDD(max = MaxTemp, min = MinTemp)) %>%
filter(JulianDay > 129) %>%
filter(JulianDay <= yday(Sys.Date())) %>% #This isn't quite right
arrange(JulianDay) %>%
select(Date, MaxTemp, MinTemp, GDDDaily)
for (row in 1:nrow(New)) {
if (row == 1) {
New[row, "M800"] <- New[1, "GDDDaily"]
}
else {
New[row, "M800"] <- New[(row-1), "M800"] + New[row, "GDDDaily"]
}
}
for (row in 1:nrow(New)) {
if (row == 1) {
New[row, "M901"] <- New[1, "GDDDaily"]
}
else {
New[row, "M901"] <- New[(row-1), "M901"] + New[row, "GDDDaily"]
}
}
for (row in 2:nrow(New)) {
if (row == 2) {
New[row, "M1300"] <- New[2, "GDDDaily"]
}
else {
New[row, "M1300"] <- New[(row-1), "M1300"] + New[row, "GDDDaily"]
}
}
for (row in 2:nrow(New)) {
if (row == 2) {
New[row, "M1500"] <- New[2, "GDDDaily"]
}
else {
New[row, "M1500"] <- New[(row-1), "M1500"] + New[row, "GDDDaily"]
}
}
for (row in 3:nrow(New)) {
if (row == 3) {
New[row, "H102"] <- New[3, "GDDDaily"]
}
else {
New[row, "H102"] <- New[(row-1), "H102"] + New[row, "GDDDaily"]
}
}
for (row in 4:nrow(New)) {
if (row == 4) {
New[row, "B504"] <- New[4, "GDDDaily"]
}
else {
New[row, "B504"] <- New[(row-1), "B504"] + New[row, "GDDDaily"]
}
}
for (row in 12:nrow(New)) {
if (row == 12) {
New[row, "B505"] <- New[12, "GDDDaily"]
}
else {
New[row, "B505"] <- New[(row-1), "B505"] + New[row, "GDDDaily"]
}
}
sheet_write(New, "16NFTFuyLMa86Y6DH_e18dhfqQzNx5fvs3B2ofny8HCs", "WM_automatic")
write.csv(New, "WMARS_existing.csv")
library(lubridate)
library(googlesheets4)
'%!in%' <- function(x,y)!('%in%'(x,y))
# Initialize the spreadsheet for the season manually if it hasn't been already
if (!file.exists("Hancock_existing.csv")) {
WMARS_existing <- read_csv(file = "Date, Max, Min, GDDDaily
05/16/2022, 72.1, 48.9, NA")
write.csv(WMARS_existing, "Hancock_existing.csv")
}
Existing <- read.csv("Hancock_existing.csv") %>%
mutate(JulianDay = yday(as.Date(Date, "%m/%d/%y")))
New <- read.csv("Hancock.csv") %>%
mutate(Date = paste(Date, "/2022", sep="")) %>%
mutate(JulianDay = yday(as.Date(Date, "%m/%d/%y"))) %>%
filter(JulianDay %!in% Existing$JulianDay) %>%
filter(JulianDay >= 137)
New <- merge(Existing, New, sort=FALSE, all=TRUE) %>%
mutate(GDDDaily = calc.daily.GDD(max = Max, min = Min)) %>%
filter(JulianDay >= 137) %>%
#  filter(JulianDay < yday(Sys.Date())) %>%
arrange(JulianDay) %>%
select(Date, Max, Min, GDDDaily)
for (row in 1:nrow(New)) {
if (row == 1) {
New[row, "K25-K28"] <- New[1, "GDDDaily"]
}
else {
New[row, "K25-K28"] <- New[(row-1), "K25-K28"] + New[row, "GDDDaily"]
}
}
for (row in 2:nrow(New)) {
if (row == 2) {
New[row, "K29-K32"] <- New[2, "GDDDaily"]
}
else {
New[row, "K29-K32"] <- New[(row-1), "K29-K32"] + New[row, "GDDDaily"]
}
}
for (row in 3:nrow(New)) {
if (row == 3) {
New[row, "S12-S16"] <- New[3, "GDDDaily"]
}
else {
New[row, "S12-S16"] <- New[(row-1), "S12-S16"] + New[row, "GDDDaily"]
}
}
sheet_write(New, "16NFTFuyLMa86Y6DH_e18dhfqQzNx5fvs3B2ofny8HCs", "HAN_automatic")
write.csv(New, "Hancock_existing.csv")
library(lubridate)
library(googlesheets4)
'%!in%' <- function(x,y)!('%in%'(x,y))
if (!file.exists("Arlington_existing.csv")) {
WMARS_existing <- read_csv(file = "Date, Max, Min, GDDDaily
05/23/2022, 62.1, 32.8, NA")
write.csv(WMARS_existing, "Arlington_existing.csv")
}
Existing <- read.csv("Arlington_existing.csv") %>%
mutate(JulianDay = yday(as.Date(Date, "%m/%d/%y")))
New <- read.csv("Arlington.csv") %>%
mutate(Date = paste(Date, "/2022", sep="")) %>%
mutate(JulianDay = yday(as.Date(Date, "%m/%d/%y"))) %>%
filter(JulianDay %!in% Existing$JulianDay) %>%
filter(JulianDay >= 144)
New <- merge(Existing, New, sort=FALSE, all=TRUE) %>%
mutate(GDDDaily = calc.daily.GDD(max = Max, min = Min)) %>%
filter(JulianDay >= 144) %>%
#  filter(JulianDay < yday(Sys.Date())) %>%
arrange(JulianDay) %>%
select(Date, Max, Min, GDDDaily)
for (row in 1:nrow(New)) {
if (row == 1) {
New[row, "1E"] <- New[1, "GDDDaily"]
}
else {
New[row, "1E"] <- New[(row-1), "1E"] + New[row, "GDDDaily"]
}
}
for (row in 1:nrow(New)) {
if (row == 1) {
New[row, "1W"] <- New[1, "GDDDaily"]
}
else {
New[row, "1W"] <- New[(row-1), "1W"] + New[row, "GDDDaily"]
}
}
sheet_write(New, "16NFTFuyLMa86Y6DH_e18dhfqQzNx5fvs3B2ofny8HCs", "ARL_automatic")
write.csv(New, "Arlington_existing.csv")
WMARSExisting <- read.csv("WMARS_existing.csv") %>%
select(Date, M800) %>%
mutate(Date = as.Date(Date, "%m/%d/%y"))
HANExisting <- read.csv("Hancock_existing.csv", check.names = FALSE) %>%
select(Date, `K25-K28`) %>%
mutate(Date = as.Date(Date, "%m/%d/%y"))
Merged <- merge(WMARSExisting, HANExisting, by = "Date", all=TRUE) %>%
gather(M800, `K25-K28`, key = "Field", value = "GDDs") %>%
mutate(Field = case_when(
Field == "M800" ~ "West Madison (M800)",
Field == "K25-K28" ~ "Hancock (K25 - K28)"
))
Merged$Field <- factor(Merged$Field, levels = c("West Madison (M800)", "Hancock (K25 - K28)"))
ggplot(Merged, aes(Date, GDDs, group=Field, color=Field)) +
geom_line() +
theme_classic() +
ylab("Cumulative GDDs (ºF)") +
ggtitle("Grain Trials") +
geom_hline(yintercept = 1200, linetype = 'dotted', col = 'blue') +
annotate("text", x = as.Date("05/15/2021", "%m/%d/%y"), y = 1250, label = "Approximate start of flowering") +
geom_hline(yintercept = 120, linetype = 'dotted', col = 'blue') +
annotate("text", x = as.Date("05/15/2021", "%m/%d/%y"), y = 170, label = "Approximate time of emergence") +
scale_color_manual(values = c("#F8766D", "#00BA38", "#619CFF", "black")) +
scale_x_date(limits = c(as.Date("05/9/2021", "%m/%d/%y"), as.Date("05/25/2021", "%m/%d/%y")))
ggsave("TrialGDDs.png", dpi=200, width = 6, height = 4, units = "in")
WMARSExisting <- read.csv("WMARS_existing.csv") %>%
select(Date, M901) %>%
mutate(Date = as.Date(Date, "%m/%d/%y"))
Merged <- WMARSExisting %>%
gather(M901, key = "Field", value = "GDDs") %>%
mutate(Field = case_when(
Field == "M901" ~ "West Madison (M901)"
))
Merged$Field <- factor(Merged$Field, levels = c("West Madison (M901)"))
ggplot(Merged, aes(Date, GDDs, group=Field, color=Field)) +
geom_line() +
theme_classic() +
ylab("Cumulative GDDs (ºF)") +
ggtitle("Silage Trials") +
geom_hline(yintercept = 2195, linetype = 'dotted', col = 'blue') +
annotate("text", x = as.Date("05/15/2021", "%m/%d/%y"), y = 2050, label = "~ 35% dry matter silage") +
scale_color_manual(values = c("#00BA38", "#619CFF", "black")) +
scale_x_date(limits = c(as.Date("05/9/2021", "%m/%d/%y"), as.Date("05/25/2021", "%m/%d/%y")))
ggsave("Silage.png", dpi=200, width = 6, height = 4, units = "in")
WMARSExisting <- read.csv("WMARS_existing.csv") %>%
select(Date, H102, B504, B505) %>%
mutate(Date = as.Date(Date, "%m/%d/%y")) %>%
gather(H102, B504, B505, key = "Field", value = "GDDs")
WMARSExisting$Field <- factor(WMARSExisting$Field, levels = c("H102", "B504", "B505"))
ggplot(WMARSExisting, aes(Date, GDDs, group=Field, color=Field)) +
geom_line() +
theme_classic() +
ylab("Cumulative GDDs (ºF)") +
ggtitle("Nurseries and Observations") +
geom_hline(yintercept = 1200, linetype = 'dotted', col = 'blue') +
annotate("text", x = as.Date("05/15/2021", "%m/%d/%y"), y = 1150, label = "Approximate start of flowering") +
geom_hline(yintercept = 120, linetype = 'dotted', col = 'blue') +
annotate("text", x = as.Date("05/15/2021", "%m/%d/%y"), y = 170, label = "Approximate time of emergence") +
scale_x_date(limits = c(as.Date("05/9/2021", "%m/%d/%y"), as.Date("05/25/2021", "%m/%d/%y")))
ggsave("NurseriesGDDs.png", dpi=500, width = 6, height = 4, units = "in")
WMARSExisting <- read.csv("WMARS_existing.csv") %>%
select(Date, M800) %>%
mutate(Date = as.Date(Date, "%m/%d/%y"))
HANExisting <- read.csv("Hancock_existing.csv", check.names = FALSE) %>%
select(Date, `1E`) %>%
mutate(Date = as.Date(Date, "%m/%d/%y"))
WMARSExisting <- read.csv("WMARS_existing.csv") %>%
select(Date, M800) %>%
mutate(Date = as.Date(Date, "%m/%d/%y"))
HANExisting <- read.csv("Hancock_existing.csv", check.names = FALSE) %>%
select(Date, `K25-K28`) %>%
mutate(Date = as.Date(Date, "%m/%d/%y"))
ARLExisting <- read.csv("Arlington_existing.csv", check.names = FALSE) %>%
select(Date, `1E`) %>%
mutate(Date = as.Date(Date, "%m/%d/%y"))
Merged <- merge(WMARSExisting, HANExisting, by = "Date", all=TRUE) %>%
merge(ARLExisting, by = "Date", all = TRUE) %>%
gather(M800, `K25-K28`, `1E`, key = "Field", value = "GDDs") %>%
mutate(Field = case_when(
Field == "M800" ~ "West Madison (M800)",
Field == "K25-K28" ~ "Hancock (K25 - K28)",
Field == "1E" ~ "Arlington (1E)"
))
Merged$Field <- factor(Merged$Field, levels = c("West Madison (M800)", "Hancock (K25 - K28)", "Arlington (1E)"))
ggplot(Merged, aes(Date, GDDs, group=Field, color=Field)) +
geom_line() +
theme_classic() +
ylab("Cumulative GDDs (ºF)") +
ggtitle("Grain Trials") +
geom_hline(yintercept = 1200, linetype = 'dotted', col = 'blue') +
annotate("text", x = as.Date("05/15/2022", "%m/%d/%y"), y = 1250, label = "Approximate start of flowering") +
geom_hline(yintercept = 120, linetype = 'dotted', col = 'blue') +
annotate("text", x = as.Date("05/15/2022", "%m/%d/%y"), y = 170, label = "Approximate time of emergence") +
scale_color_manual(values = c("#F8766D", "#00BA38", "#619CFF", "black")) +
scale_x_date(limits = c(as.Date("05/9/2022", "%m/%d/%y"), as.Date("05/25/2022", "%m/%d/%y")))
ggsave("TrialGDDs.png", dpi=200, width = 6, height = 4, units = "in")
knitr::opts_chunk$set(echo = TRUE)
Key <- read.delim("Exome_keyFile.txt")
Pedigrees <- read.csv("pedigree_FFAR.csv")
View(Key)
View(Pedigrees)
ToKeep <- Key %>%
filter(cultivar %in% Pedigrees$Inbred_1)
View(ToKeep)
nrow(Key)
cat("set -e", file = "MoveFFAR.sh")
cat("\n", file = "MoveFFAR.sh", append = TRUE)
for (row in 1:nrow(ToKeep)) {
cat(paste0("mv /Volumes/Drive2/PEReads/", ToKeep[row, "filename"], ".gz MAGIC_ExomeReads"), file = "MoveFFAR.sh", append = TRUE)
cat("\n", file = "MoveFFAR.sh", append = TRUE)
cat(paste0("mv /Volumes/Drive2/PEReads/", ToKeep[row, "filename2"], ".gz MAGIC_ExomeReads"), file = "MoveFFAR.sh", append = TRUE)
cat("\n", file = "MoveFFAR.sh", append = TRUE)
}
WMARSExisting <- read.csv("WMARS_existing.csv") %>%
select(Date, M901) %>%
mutate(Date = as.Date(Date, "%m/%d/%y"))
ARLExisting <- read.csv("Arlington_existing.csv", check.names = FALSE) %>%
select(Date, `26N`) %>%
mutate(Date = as.Date(Date, "%m/%d/%y"))
Merged <- merge(WMARSExisting, ARLExisting, by = "Date", all = TRUE) %>%
gather(M901, key = "Field", value = "GDDs") %>%
mutate(Field = case_when(
Field == "M901" ~ "West Madison (M901)",
Field == "26N" ~ "Arlington (26N)"
))
Merged$Field <- factor(Merged$Field, levels = c("West Madison (M901)", "Arlington (26N)"))
ggplot(Merged, aes(Date, GDDs, group=Field, color=Field)) +
geom_line() +
theme_classic() +
ylab("Cumulative GDDs (ºF)") +
ggtitle("Silage Trials") +
geom_hline(yintercept = 2195, linetype = 'dotted', col = 'blue') +
annotate("text", x = as.Date("05/15/2021", "%m/%d/%y"), y = 2050, label = "~ 35% dry matter silage") +
scale_color_manual(values = c("#00BA38", "#619CFF", "black")) +
scale_x_date(limits = c(as.Date("05/9/2022", "%m/%d/%y"), as.Date("05/25/2021", "%m/%d/%y")))
ggsave("Silage.png", dpi=200, width = 6, height = 4, units = "in")
View(Merged)
WMARSExisting <- read.csv("WMARS_existing.csv") %>%
select(Date, M901) %>%
mutate(Date = as.Date(Date, "%m/%d/%y"))
ARLExisting <- read.csv("Arlington_existing.csv", check.names = FALSE) %>%
select(Date, `26N`) %>%
mutate(Date = as.Date(Date, "%m/%d/%y"))
Merged <- merge(WMARSExisting, ARLExisting, by = "Date", all = TRUE) %>%
gather(M901, `26N`, key = "Field", value = "GDDs") %>%
mutate(Field = case_when(
Field == "M901" ~ "West Madison (M901)",
Field == "26N" ~ "Arlington (26N)"
))
Merged$Field <- factor(Merged$Field, levels = c("West Madison (M901)", "Arlington (26N)"))
ggplot(Merged, aes(Date, GDDs, group=Field, color=Field)) +
geom_line() +
theme_classic() +
ylab("Cumulative GDDs (ºF)") +
ggtitle("Silage Trials") +
geom_hline(yintercept = 2195, linetype = 'dotted', col = 'blue') +
annotate("text", x = as.Date("05/15/2021", "%m/%d/%y"), y = 2050, label = "~ 35% dry matter silage") +
scale_color_manual(values = c("#00BA38", "#619CFF", "black")) +
scale_x_date(limits = c(as.Date("05/9/2022", "%m/%d/%y"), as.Date("05/25/2021", "%m/%d/%y")))
ggsave("Silage.png", dpi=200, width = 6, height = 4, units = "in")
knitr::opts_chunk$set(echo = TRUE)
PEFiles <- data.frame(file = list.files("TrimmedReadsPE"))
View(PEFiles)
PEFiles <- data.frame(file = list.files("TrimmedReadsPE")) %>%
mutate(Beginning = substr(file, 1, nchar(file) - 9))
PEFiles <- data.frame(file = list.files("TrimmedReadsPE")) %>%
mutate(cultivar = substr(file, 1, nchar(file) - 9)) %>%
mutate(flowcell_lane = NA) %>%
mutate(filename = paste0(cultivar, "_r1.fq.gz")) %>%
mutate(filename2 = paste0(cultivar, "_r2.fq.gz")) %>%
mutate(plate = 1) %>%
select(-file)
PEFiles <- data.frame(file = list.files("TrimmedReadsPE")) %>%
mutate(cultivar = substr(file, 1, nchar(file) - 9)) %>%
mutate(flowcell_lane = NA) %>%
mutate(filename = paste0(cultivar, "_r1.fq.gz")) %>%
mutate(filename2 = paste0(cultivar, "_r2.fq.gz")) %>%
mutate(plate = 1) %>%
select(-file)
write.table(PEFiles, "PEKey.txt", sep="\t", quote = FALSE, row.names = FALSE)
SEFiles <- data.frame(file = list.files("TrimmedReadsSE")) %>%
mutate(cultivar = substr(file, 1, nchar(file) - 6)) %>%
mutate(flowcell_lane = NA) %>%
mutate(filename = paste0(cultivar, ".fq.gz")) %>%
mutate(plate = 2) %>%
select(-file)
View(SEFiles)
SEFiles <- data.frame(file = list.files("TrimmedReadsSE")) %>%
mutate(cultivar = substr(file, 1, nchar(file) - 6)) %>%
mutate(flowcell_lane = NA) %>%
mutate(filename = paste0(cultivar, ".fq.gz")) %>%
mutate(plate = 2) %>%
select(-file)
write.table(SEFiles, "SEKey.txt", sep="\t", quote = FALSE, row.names = FALSE)
SNPList <- read.csv("SNPListWithMAF.csv")
View(SNPList)
SNPList <- read.csv("SNPListWithMAF.csv") %>%
filter(!is.na(chrom_V5)) %>%
select(chrom = chrom_V5, chromStart = pos_V5) %>%
mutate(chromEnd = chrom_Start)
SNPList <- read.csv("SNPListWithMAF.csv") %>%
filter(!is.na(chrom_V5)) %>%
select(chrom = chrom_V5, chromStart = pos_V5) %>%
mutate(chromEnd = chromStart)
write.table(SNPList, "SNPList.bed", sep="\t", quote = FALSE, row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
SNPList <- read.csv("SNPListWithMAF.csv") %>%
filter(!is.na(chrom_V5)) %>%
select(chrom = chrom_V5, chromStart = pos_V5)
library(tidyverse)
SNPList <- read.csv("SNPListWithMAF.csv") %>%
filter(!is.na(chrom_V5)) %>%
select(chrom = chrom_V5, chromStart = pos_V5)
library(tidyverse)
SNPList <- read.csv("SNPListWithMAF.csv") %>%
filter(!is.na(chrom_V5)) %>%
select(chrom = chrom_V5, chrom = pos_V5) %>%
mutate(rs. = paste0("S", chrom, "_", pos)) %>%
mutate(alleles = "A") %>%
select(rs., alleles, chrom, pos) %>%
mutate(strand = NA) %>%
mutate(assembly. = NA) %>%
mutate(center = NA) %>%
mutate(protLSID = NA) %>%
mutate(assayLSID = NA) %>%
mutate(panelLSID = NA) %>%
mutate(QCcode = NA) %>%
mutate(Geno1 = "A")
library(tidyverse)
SNPList <- read.csv("SNPListWithMAF.csv") %>%
filter(!is.na(chrom_V5)) %>%
select(chrom = chrom_V5, pos = pos_V5) %>%
mutate(rs. = paste0("S", chrom, "_", pos)) %>%
mutate(alleles = "A") %>%
select(rs., alleles, chrom, pos) %>%
mutate(strand = NA) %>%
mutate(assembly. = NA) %>%
mutate(center = NA) %>%
mutate(protLSID = NA) %>%
mutate(assayLSID = NA) %>%
mutate(panelLSID = NA) %>%
mutate(QCcode = NA) %>%
mutate(Geno1 = "A")
write.table(SNPList, "PositionsHapmap.hmp.txt", sep="\t", quote = FALSE, row.names = FALSE)
library(tidyverse)
SNPList <- read.csv("SNPListWithMAF.csv") %>%
filter(!is.na(chrom_V5)) %>%
select(chrom = chrom_V5, pos = pos_V5) %>%
mutate(rs. = paste0("S", chrom, "_", pos)) %>%
mutate(alleles = "A") %>%
select(rs., alleles, chrom, pos) %>%
mutate(strand = NA) %>%
mutate(assembly. = NA) %>%
mutate(center = NA) %>%
mutate(protLSID = NA) %>%
mutate(assayLSID = NA) %>%
mutate(panelLSID = NA) %>%
mutate(QCcode = NA) %>%
mutate(Geno1 = "A")
write.table(SNPList, "PositionsHapmap.hmp.txt", sep="\t", quote = FALSE, row.names = FALSE)
library(tidyverse)
SNPList <- read.csv("SNPListWithMAF.csv") %>%
filter(!is.na(chrom_V5)) %>%
select(chrom = chrom_V5, pos = pos_V5) %>%
mutate(rs. = paste0("S", chrom, "_", pos)) %>%
mutate(alleles = "A") %>%
select(rs., alleles, chrom, pos) %>%
mutate(strand = NA) %>%
mutate(assembly. = NA) %>%
mutate(center = NA) %>%
mutate(protLSID = NA) %>%
mutate(assayLSID = NA) %>%
mutate(panelLSID = NA) %>%
mutate(QCcode = NA) %>%
mutate(Geno1 = "A")
write.table(SNPList, "PositionsHapmap.hmp.txt", sep="\t", quote = FALSE, row.names = FALSE)
library(tidyverse)
SNPList <- read.csv("SNPListWithMAF.csv") %>%
filter(!is.na(chrom_V5)) %>%
select(chrom = chrom_V5, pos = pos_V5) %>%
mutate(rs. = paste0("S", chrom, "_", pos)) %>%
mutate(alleles = "A") %>%
select(rs., alleles, chrom, pos) %>%
mutate(strand = NA) %>%
mutate(assembly. = NA) %>%
mutate(center = NA) %>%
mutate(protLSID = NA) %>%
mutate(assayLSID = NA) %>%
mutate(panelLSID = NA) %>%
mutate(QCcode = NA) %>%
mutate(Geno1 = "A") %>%
arrange(chrom, pos)
write.table(SNPList, "PositionsHapmap.hmp.txt", sep="\t", quote = FALSE, row.names = FALSE)
PEFiles <- data.frame(file = list.files("TrimmedReadsPE")) %>%
mutate(cultivar = substr(file, 1, nchar(file) - 9)) %>%
group_by(cultivar) %>%
filter(row_number() == 1) %>%
ungroup() %>%
mutate(flowcell_lane = NA) %>%
mutate(filename = paste0(cultivar, "_r1.fq.gz")) %>%
mutate(filename2 = paste0(cultivar, "_r2.fq.gz")) %>%
mutate(plate = 1) %>%
select(-file)
write.table(PEFiles, "PEKey.txt", sep="\t", quote = FALSE, row.names = FALSE)
PEFiles <- data.frame(file = list.files("TrimmedReadsPE")) %>%
mutate(cultivar = substr(file, 1, nchar(file) - 9)) %>%
group_by(cultivar) %>%
filter(row_number() == 1) %>%
ungroup() %>%
mutate(flowcell_lane = NA) %>%
mutate(filename = paste0(cultivar, "_r1.fq.gz")) %>%
mutate(filename2 = paste0(cultivar, "_r2.fq.gz")) %>%
mutate(plate = 3) %>%
select(-file)
write.table(PEFiles, "PEKey.txt", sep="\t", quote = FALSE, row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
10193899+200
10193899-100
10193899+100
1020677-100
1020677+100
77741095-100
77741095+100
knitr::opts_chunk$set(echo = TRUE)
WMARSExisting <- read.csv("WMARS_existing.csv") %>%
select(Date, M800) %>%
mutate(Date = as.Date(Date, "%m/%d/%y"))
library(tidyverse)
library(lubridate)
'%!in%' <- function(x,y)!('%in%'(x,y))
WMARSExisting <- read.csv("WMARS_existing.csv") %>%
select(Date, M800) %>%
mutate(Date = as.Date(Date, "%m/%d/%y"))
HANExisting <- read.csv("Hancock_existing.csv", check.names = FALSE) %>%
select(Date, `K25-K28`) %>%
mutate(Date = as.Date(Date, "%m/%d/%y"))
ARLExisting <- read.csv("Arlington_existing.csv", check.names = FALSE) %>%
select(Date, `1E`, `712`) %>%
mutate(Date = as.Date(Date, "%m/%d/%y"))
Merged <- merge(WMARSExisting, HANExisting, by = "Date", all=TRUE) %>%
merge(ARLExisting, by = "Date", all = TRUE) %>%
gather(M800, `K25-K28`, `1E`, `712`, key = "Field", value = "GDDs") %>%
mutate(Field = case_when(
Field == "M800" ~ "West Madison (M800)",
Field == "K25-K28" ~ "Hancock (K25 - K28)",
Field == "1E" ~ "Arlington (1E)",
Field == "712" ~ "Arlington (712)"
))
Merged$Field <- factor(Merged$Field, levels = c("West Madison (M800)", "Hancock (K25 - K28)", "Arlington (1E)", "Arlington (712)"))
ggplot(Merged, aes(Date, GDDs, group=Field, color=Field)) +
geom_line() +
theme_classic() +
ylab("Cumulative GDDs (ºF)") +
ggtitle("Grain Trials") +
geom_hline(yintercept = 1200, linetype = 'dotted', col = 'blue') +
annotate("text", x = as.Date("05/20/2022", "%m/%d/%y"), y = 1250, label = "Approximate start of flowering") +
geom_hline(yintercept = 120, linetype = 'dotted', col = 'blue') +
annotate("text", x = as.Date("05/20/2022", "%m/%d/%y"), y = 170, label = "Approximate time of emergence") +
scale_color_manual(values = c("#F8766D", "#00BA38", "#619CFF", "black")) #+
#scale_x_date(limits = c(as.Date("05/9/2022", "%m/%d/%y"), as.Date("05/25/2022", "%m/%d/%y")))
ggsave("TrialGDDs.png", dpi=200, width = 6, height = 4, units = "in")
